# This is a basic workflow to help you get started with Actions

name: CI_BuildArtifact

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildDockerArtifact:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2

      - name: Install Dependencies
        run: |
          npm ci
      - name: Tests
        run: |
          npm test

      - name: Build
        run: |
          npm run build -- --prod

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/angular:v_0.0.1

      - name: Echo
        run: |
          echo $GITHUB_RUN_NUMBER
          echo $GITHUB_RUN_ID

#  deployToProd:
##    needs: buildDockerArtifact
##    if: false
#    runs-on: ubuntu-latest
#    steps:
#      - name: "Run deploy on server"
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_HOST }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          password: ${{ secrets.SERVER_PASSWORD }}
#          port: ${{ secrets.SERVER_PORT }}
#          script: |
#            sudo docker kill $(docker ps -q)
#            sudo docker pull daniel0k/angular:v_0.0.1
#            sudo docker run -d -p 81:80 daniel0k/angular:v_0.0.1
